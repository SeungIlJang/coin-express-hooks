{"ast":null,"code":"import _regeneratorRuntime from \"/Users/terry/WebstormProjects/reactNativeStudy/coin-express-hooks/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/terry/WebstormProjects/reactNativeStudy/coin-express-hooks/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/terry/WebstormProjects/reactNativeStudy/coin-express-hooks/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { getCoinExchanges } from \"../../api\";\n\nvar useCoinExchanges = function useCoinExchanges(id) {\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      exchanges = _useState4[0],\n      setExchanges = _useState4[1];\n\n  var getExchanges =\n  /*#__PURE__*/\n  function () {\n    var _ref = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var _ref2, _exchanges;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return getCoinExchanges(id);\n\n            case 3:\n              _ref2 = _context.sent;\n              _exchanges = _ref2.data;\n              setExchanges(_exchanges);\n              _context.next = 11;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 11:\n              _context.prev = 11;\n              setLoading(false);\n              return _context.finish(11);\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 8, 11, 14]]);\n    }));\n\n    return function getExchanges() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    getExchanges();\n  }, []);\n  return {\n    loading: loading,\n    exchanges: exchanges\n  };\n};\n\nvar CoinExchanges = function CoinExchanges(_ref3) {\n  var id = _ref3.match.params.id;\n\n  var _useCoinExchanges = useCoinExchanges(id),\n      loading = _useCoinExchanges.loading,\n      exchanges = _useCoinExchanges.exchanges;\n\n  return \"\";\n};\n\nexport default CoinExchanges;","map":{"version":3,"sources":["/Users/terry/WebstormProjects/reactNativeStudy/coin-express-hooks/src/Screens/CoinExchanges/index.js"],"names":["getCoinExchanges","useCoinExchanges","id","useState","loading","setLoading","exchanges","setExchanges","getExchanges","data","console","log","useEffect","CoinExchanges","match","params"],"mappings":";;;AAAA,SAAQA,gBAAR,QAA+B,WAA/B;;AAEA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,EAAD,EAAQ;AAAA,kBAECC,QAAQ,CAAC,IAAD,CAFT;AAAA;AAAA,MAEtBC,OAFsB;AAAA,MAEbC,UAFa;;AAAA,mBAGKF,QAAQ,CAAC,EAAD,CAHb;AAAA;AAAA,MAGtBG,SAHsB;AAAA,MAGXC,YAHW;;AAK7B,MAAMC,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAG;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAGqBR,gBAAgB,CAACE,EAAD,CAHrC;;AAAA;AAAA;AAGCI,cAAAA,UAHD,SAGLG,IAHK;AAIbF,cAAAA,YAAY,CAACD,UAAD,CAAZ;AAJa;AAAA;;AAAA;AAAA;AAAA;AAMbI,cAAAA,OAAO,CAACC,GAAR;;AANa;AAAA;AAQbN,cAAAA,UAAU,CAAC,KAAD,CAAV;AARa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAZG,YAAY;AAAA;AAAA;AAAA,KAAlB;;AAWAI,EAAAA,SAAS,CAAC,YAAM;AACZJ,IAAAA,YAAY;AACf,GAFQ,EAEN,EAFM,CAAT;AAIA,SAAO;AAACJ,IAAAA,OAAO,EAAPA,OAAD;AAASE,IAAAA,SAAS,EAATA;AAAT,GAAP;AACH,CArBD;;AAuBA,IAAMO,aAAa,GAAG,SAAhBA,aAAgB,QAA0B;AAAA,MAATX,EAAS,SAAxBY,KAAwB,CAAjBC,MAAiB,CAATb,EAAS;;AAAA,0BAChBD,gBAAgB,CAACC,EAAD,CADA;AAAA,MACrCE,OADqC,qBACrCA,OADqC;AAAA,MAC7BE,SAD6B,qBAC7BA,SAD6B;;AAE5C,SAAQ,EAAR;AACH,CAHD;;AAIA,eAAeO,aAAf","sourcesContent":["import {getCoinExchanges} from \"../../api\";\n\nconst useCoinExchanges = (id) => {\n\n    const [loading, setLoading] = useState(true);\n    const [exchanges, setExchanges] = useState([]);\n\n    const getExchanges = async () => {\n\n        try {\n            const { data: exchanges } = await getCoinExchanges(id);\n            setExchanges(exchanges);\n        } catch (e) {\n            console.log(e);\n        } finally {\n            setLoading(false);\n        }\n    };\n    useEffect(() => {\n        getExchanges();\n    }, []);\n\n    return {loading,exchanges};\n};\n\nconst CoinExchanges = ({match:{params:{id}}})=> {\n    const {loading,exchanges} = useCoinExchanges(id);\n    return (\"\");\n};\nexport default CoinExchanges;\n"]},"metadata":{},"sourceType":"module"}