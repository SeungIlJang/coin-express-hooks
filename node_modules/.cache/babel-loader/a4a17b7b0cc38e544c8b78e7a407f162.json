{"ast":null,"code":"import _regeneratorRuntime from \"/Users/terry/WebstormProjects/reactNativeStudy/coin-express-hooks/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/terry/WebstormProjects/reactNativeStudy/coin-express-hooks/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/terry/WebstormProjects/reactNativeStudy/coin-express-hooks/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/terry/WebstormProjects/reactNativeStudy/coin-express-hooks/src/Screens/Markets/index.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { getCoinMarkets } from \"../../api\";\nimport Loader from \"../../Components/Loader\";\nimport Market from \"../../Components/Market\";\nimport PropTypes from \"prop-types\";\nimport MarketsPresenter from \"./MarketsPresenter\";\n\nvar useMarkets = function useMarkets(id) {\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      markets = _useState4[0],\n      setMarkets = _useState4[1];\n\n  var getMarkets =\n  /*#__PURE__*/\n  function () {\n    var _ref = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var _ref2, _markets;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return getCoinMarkets(id);\n\n            case 3:\n              _ref2 = _context.sent;\n              _markets = _ref2.data;\n              setMarkets(_markets);\n              _context.next = 11;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 11:\n              _context.prev = 11;\n              setLoading(false);\n              return _context.finish(11);\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 8, 11, 14]]);\n    }));\n\n    return function getMarkets() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    getMarkets();\n  }, []);\n  return {\n    loading: loading,\n    markets: markets\n  };\n};\n\nvar Markets = function Markets(_ref3) {\n  var id = _ref3.match.params.id;\n\n  var _useMarkets = useMarkets(id),\n      loading = _useMarkets.loading,\n      markets = _useMarkets.markets;\n\n  return loading ? React.createElement(Loader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }) : markets.filter(function (market) {\n    return market.market_url;\n  }).map(function (market, index) {\n    return React.createElement(Market, {\n      key: market.id || index,\n      url: market.market_url,\n      name: market.exchange_name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    });\n  });\n};\n\nMarketsPresenter.propTypes = {\n  loading: PropTypes.bool.isRequired,\n  markets: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    url: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired\n  }))\n};\nexport default Markets;","map":{"version":3,"sources":["/Users/terry/WebstormProjects/reactNativeStudy/coin-express-hooks/src/Screens/Markets/index.js"],"names":["React","useState","useEffect","getCoinMarkets","Loader","Market","PropTypes","MarketsPresenter","useMarkets","id","loading","setLoading","markets","setMarkets","getMarkets","data","console","log","Markets","match","params","filter","market","market_url","map","index","exchange_name","propTypes","bool","isRequired","arrayOf","shape","string","url","name"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAwBC,SAAxB,QAAwC,OAAxC;AACA,SAAQC,cAAR,QAA6B,WAA7B;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,EAAD,EAAQ;AAAA,kBACOR,QAAQ,CAAC,IAAD,CADf;AAAA;AAAA,MAChBS,OADgB;AAAA,MACPC,UADO;;AAAA,mBAEOV,QAAQ,CAAC,EAAD,CAFf;AAAA;AAAA,MAEhBW,OAFgB;AAAA,MAEPC,UAFO;;AAIvB,MAAMC,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAG;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAGqBX,cAAc,CAACM,EAAD,CAHnC;;AAAA;AAAA;AAGGG,cAAAA,QAHH,SAGHG,IAHG;AAIXF,cAAAA,UAAU,CAACD,QAAD,CAAV;AAJW;AAAA;;AAAA;AAAA;AAAA;AAMXI,cAAAA,OAAO,CAACC,GAAR;;AANW;AAAA;AAQXN,cAAAA,UAAU,CAAC,KAAD,CAAV;AARW;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAVG,UAAU;AAAA;AAAA;AAAA,KAAhB;;AAWAZ,EAAAA,SAAS,CAAC,YACV;AACIY,IAAAA,UAAU;AACb,GAHQ,EAGP,EAHO,CAAT;AAIA,SAAO;AAACJ,IAAAA,OAAO,EAAPA,OAAD;AAASE,IAAAA,OAAO,EAAPA;AAAT,GAAP;AACH,CApBD;;AAsBA,IAAMM,OAAO,GAAG,SAAVA,OAAU,QAA0B;AAAA,MAATT,EAAS,SAAxBU,KAAwB,CAAjBC,MAAiB,CAATX,EAAS;;AAAA,oBACZD,UAAU,CAACC,EAAD,CADE;AAAA,MAC/BC,OAD+B,eAC/BA,OAD+B;AAAA,MACvBE,OADuB,eACvBA,OADuB;;AAEtC,SACIF,OAAO,GACH,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADG,GAGHE,OAAO,CACFS,MADL,CACY,UAAAC,MAAM;AAAA,WAAIA,MAAM,CAACC,UAAX;AAAA,GADlB,EAEKC,GAFL,CAES,UAACF,MAAD,EAASG,KAAT;AAAA,WACD,oBAAC,MAAD;AACI,MAAA,GAAG,EAAEH,MAAM,CAACb,EAAP,IAAagB,KADtB;AAEI,MAAA,GAAG,EAAEH,MAAM,CAACC,UAFhB;AAGI,MAAA,IAAI,EAAED,MAAM,CAACI,aAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADC;AAAA,GAFT,CAJR;AAeH,CAjBD;;AAmBAnB,gBAAgB,CAACoB,SAAjB,GAA6B;AACzBjB,EAAAA,OAAO,EAAEJ,SAAS,CAACsB,IAAV,CAAeC,UADC;AAEzBjB,EAAAA,OAAO,EAAEN,SAAS,CAACwB,OAAV,CACLxB,SAAS,CAACyB,KAAV,CAAgB;AACZtB,IAAAA,EAAE,EAAEH,SAAS,CAAC0B,MAAV,CAAiBH,UADT;AAEZI,IAAAA,GAAG,EAAE3B,SAAS,CAAC0B,MAAV,CAAiBH,UAFV;AAGZK,IAAAA,IAAI,EAAE5B,SAAS,CAAC0B,MAAV,CAAiBH;AAHX,GAAhB,CADK;AAFgB,CAA7B;AAWA,eAAeX,OAAf","sourcesContent":["import React, {useState,useEffect} from \"react\";\nimport {getCoinMarkets} from \"../../api\";\nimport Loader from \"../../Components/Loader\";\nimport Market from \"../../Components/Market\";\nimport PropTypes from \"prop-types\";\nimport MarketsPresenter from \"./MarketsPresenter\";\n\nconst useMarkets = (id) => {\n    const [loading, setLoading] = useState(true);\n    const [markets, setMarkets] = useState([]);\n\n    const getMarkets = async () => {\n\n        try {\n            const { data: markets } = await getCoinMarkets(id);\n            setMarkets(markets);\n        } catch (e) {\n            console.log(e);\n        } finally {\n            setLoading(false);\n        }\n    };\n    useEffect(()=>\n    {\n        getMarkets();\n    },[]);\n    return {loading,markets};\n};\n\nconst Markets = ({match:{params:{id}}})=> {\n    const {loading,markets} = useMarkets(id);\n    return (\n        loading ? (\n            <Loader />\n        ) : (\n            markets\n                .filter(market => market.market_url)\n                .map((market, index) => (\n                    <Market\n                        key={market.id || index}\n                        url={market.market_url}\n                        name={market.exchange_name}\n                    />\n                ))\n        )\n    );\n};\n\nMarketsPresenter.propTypes = {\n    loading: PropTypes.bool.isRequired,\n    markets: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            url: PropTypes.string.isRequired,\n            name: PropTypes.string.isRequired\n        })\n    )\n};\n\nexport default Markets;\n"]},"metadata":{},"sourceType":"module"}