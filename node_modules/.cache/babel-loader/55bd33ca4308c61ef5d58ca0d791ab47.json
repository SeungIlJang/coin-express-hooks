{"ast":null,"code":"import _regeneratorRuntime from \"/Users/terry/WebstormProjects/reactNativeStudy/coin-express-hooks/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/terry/WebstormProjects/reactNativeStudy/coin-express-hooks/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/terry/WebstormProjects/reactNativeStudy/coin-express-hooks/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/terry/WebstormProjects/reactNativeStudy/coin-express-hooks/src/Screens/Markets/index.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { getCoinMarkets } from \"../../api\";\nimport Loader from \"../../Components/Loader\";\nimport Market from \"../../Components/Market\";\n\nvar useMarkets = function useMarkets(id) {\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      markets = _useState4[0],\n      setMarkets = _useState4[1];\n\n  var getMarkets =\n  /*#__PURE__*/\n  function () {\n    var _ref = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var _ref2, _markets;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return getCoinMarkets(id);\n\n            case 3:\n              _ref2 = _context.sent;\n              _markets = _ref2.data;\n              setMarkets(_markets);\n              _context.next = 11;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 11:\n              _context.prev = 11;\n              setLoading(false);\n              return _context.finish(11);\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 8, 11, 14]]);\n    }));\n\n    return function getMarkets() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    getMarkets();\n  }, []);\n};\n\nvar Markets = function Markets() {\n  var _useMarkets = useMarkets(),\n      loading = _useMarkets.loading,\n      markets = _useMarkets.markets;\n\n  return loading ? React.createElement(Loader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }) : markets.filter(function (market) {\n    return market.market_url;\n  }).map(function (market, index) {\n    return React.createElement(Market, {\n      key: market.id || index,\n      url: market.market_url,\n      name: market.exchange_name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    });\n  });\n};\n\nexport default Markets;","map":{"version":3,"sources":["/Users/terry/WebstormProjects/reactNativeStudy/coin-express-hooks/src/Screens/Markets/index.js"],"names":["React","useState","useEffect","getCoinMarkets","Loader","Market","useMarkets","id","loading","setLoading","markets","setMarkets","getMarkets","data","console","log","Markets","filter","market","market_url","map","index","exchange_name"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAwBC,SAAxB,QAAwC,OAAxC;AACA,SAAQC,cAAR,QAA6B,WAA7B;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,EAAD,EAAQ;AAAA,kBACON,QAAQ,CAAC,IAAD,CADf;AAAA;AAAA,MAChBO,OADgB;AAAA,MACPC,UADO;;AAAA,mBAEOR,QAAQ,CAAC,EAAD,CAFf;AAAA;AAAA,MAEhBS,OAFgB;AAAA,MAEPC,UAFO;;AAIvB,MAAMC,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAG;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAGqBT,cAAc,CAACI,EAAD,CAHnC;;AAAA;AAAA;AAGGG,cAAAA,QAHH,SAGHG,IAHG;AAIXF,cAAAA,UAAU,CAACD,QAAD,CAAV;AAJW;AAAA;;AAAA;AAAA;AAAA;AAMXI,cAAAA,OAAO,CAACC,GAAR;;AANW;AAAA;AAQXN,cAAAA,UAAU,CAAC,KAAD,CAAV;AARW;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAVG,UAAU;AAAA;AAAA;AAAA,KAAhB;;AAWAV,EAAAA,SAAS,CAAC,YACV;AACIU,IAAAA,UAAU;AACb,GAHQ,EAGP,EAHO,CAAT;AAKH,CApBD;;AAsBA,IAAMI,OAAO,GAAG,SAAVA,OAAU,GAAK;AAAA,oBACSV,UAAU,EADnB;AAAA,MACVE,OADU,eACVA,OADU;AAAA,MACFE,OADE,eACFA,OADE;;AAEjB,SACIF,OAAO,GACH,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADG,GAGHE,OAAO,CACFO,MADL,CACY,UAAAC,MAAM;AAAA,WAAIA,MAAM,CAACC,UAAX;AAAA,GADlB,EAEKC,GAFL,CAES,UAACF,MAAD,EAASG,KAAT;AAAA,WACD,oBAAC,MAAD;AACI,MAAA,GAAG,EAAEH,MAAM,CAACX,EAAP,IAAac,KADtB;AAEI,MAAA,GAAG,EAAEH,MAAM,CAACC,UAFhB;AAGI,MAAA,IAAI,EAAED,MAAM,CAACI,aAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADC;AAAA,GAFT,CAJR;AAeH,CAjBD;;AAkBA,eAAeN,OAAf","sourcesContent":["import React, {useState,useEffect} from \"react\";\nimport {getCoinMarkets} from \"../../api\";\nimport Loader from \"../../Components/Loader\";\nimport Market from \"../../Components/Market\";\n\nconst useMarkets = (id) => {\n    const [loading, setLoading] = useState(true);\n    const [markets, setMarkets] = useState([]);\n\n    const getMarkets = async () => {\n\n        try {\n            const { data: markets } = await getCoinMarkets(id);\n            setMarkets(markets);\n        } catch (e) {\n            console.log(e);\n        } finally {\n            setLoading(false);\n        }\n    };\n    useEffect(()=>\n    {\n        getMarkets();\n    },[]);\n\n};\n\nconst Markets = ()=> {\n    const {loading,markets} = useMarkets();\n    return (\n        loading ? (\n            <Loader />\n        ) : (\n            markets\n                .filter(market => market.market_url)\n                .map((market, index) => (\n                    <Market\n                        key={market.id || index}\n                        url={market.market_url}\n                        name={market.exchange_name}\n                    />\n                ))\n        )\n    );\n};\nexport default Markets;\n"]},"metadata":{},"sourceType":"module"}